---
apiVersion: v1
kind: ImageStream
metadata:
  annotations:
    openshift.io/image.insecureRepository: "true"
  labels:
    syndesis.io/app: syndesis
    syndesis.io/type: infrastructure
    syndesis.io/component: syndesis-server
  name: fuse-ignite-server
spec:
  tags:
  - from:
      kind: DockerImage
      name: $SERVER$
    importPolicy:
      scheduled: true
      insecure: true
    name: "$TAG$"
---
apiVersion: v1
kind: ImageStream
metadata:
  annotations:
    openshift.io/image.insecureRepository: "true"
  labels:
    syndesis.io/app: syndesis
    syndesis.io/type: infrastructure
    syndesis.io/component: syndesis-ui
  name: fuse-ignite-ui
spec:
  tags:
  - from:
      kind: DockerImage
      name: $UI$
    importPolicy:
      scheduled: true
      insecure: true
    name: "$TAG$"
---
apiVersion: v1
kind: ImageStream
metadata:
  annotations:
    openshift.io/image.insecureRepository: "true"
  labels:
    syndesis.io/app: syndesis
    syndesis.io/type: infrastructure
    syndesis.io/component: syndesis-meta
  name: fuse-ignite-meta
spec:
  tags:
  - from:
      kind: DockerImage
      name: $META$
    importPolicy:
      scheduled: true
      insecure: true
    name: "$TAG$"
---
apiVersion: v1
kind: ImageStream
metadata:
  name: oauth-proxy
  labels:
    syndesis.io/app: syndesis
    syndesis.io/type: infrastructure
    syndesis.io/component: syndesis-oauthproxy
spec:
  tags:
  - from:
      kind: DockerImage
      name: $OAUTH_PROXY$
    importPolicy:
      scheduled: true
    name: "$OAUTH_PROXY_TAG$"
---
apiVersion: v1
kind: ImageStream
metadata:
  name: prometheus
  labels:
    syndesis.io/app: syndesis
    syndesis.io/type: infrastructure
    syndesis.io/component: syndesis-prometheus
spec:
  tags:
  - from:
      kind: DockerImage
      name: $PROMETHEUS$
    importPolicy:
      scheduled: true
    name: "$PROMETHEUS_TAG$"
---
apiVersion: v1
kind: ImageStream
metadata:
  annotations:
    openshift.io/image.insecureRepository: "true"
  labels:
    syndesis.io/app: syndesis
    syndesis.io/type: infrastructure
    syndesis.io/component: s2i-java
  name: fuse-ignite-s2i
spec:
  tags:
  - from:
      kind: DockerImage
      name: $S2I$
    importPolicy:
      scheduled: true
      insecure: true
    name: "$TAG$"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: syndesis-operator
  labels:
    app: syndesis
    syndesis.io/app: syndesis
    syndesis.io/type: operator
    syndesis.io/component: syndesis-operator
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: syndesis-operator
  labels:
    app: syndesis
    syndesis.io/app: syndesis
    syndesis.io/type: operator
    syndesis.io/component: syndesis-operator
rules:
- apiGroups:
  - syndesis.io
  resources:
  - syndesises
  - syndesises/finalizers
  verbs: [ get, list, create, update, delete, deletecollection, watch ]
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - configmaps
  - secrets
  - serviceaccounts
  verbs: [ get, list, create, update, delete, deletecollection, watch]
- apiGroups:
  - ""
  resources:
  - events
  verbs: [ get, list ]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs: [ get, list, create, update, delete, deletecollection, watch]
- apiGroups:
  - template.openshift.io
  resources:
  - processedtemplates
  verbs: [ get, list, create, update, delete, deletecollection, watch]
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  verbs: [ get, list, create, update, delete, deletecollection, watch]
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  verbs: [ get, list, create, update, delete, deletecollection, watch]
- apiGroups:
  - build.openshift.io
  resources:
  - buildconfigs
  verbs: [ get, list, create, update, delete, deletecollection, watch]
- apiGroups:
  - authorization.openshift.io
  resources:
  - rolebindings
  verbs: [ get, list, create, update, delete, deletecollection, watch]
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/custom-host
  verbs: [ get, list, create, update, delete, deletecollection, watch]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: syndesis-operator:$NAMESPACE$
  labels:
    app: syndesis
    syndesis.io/app: syndesis
    syndesis.io/type: operator
    syndesis.io/component: syndesis-operator
rules:
- apiGroups:
  - syndesis.io
  resources:
  - syndesises/finalizers
  verbs: [ update ]
- apiGroups:
  - oauth.openshift.io
  resources:
  - oauthclients
  verbs: [ get, list, create, update, delete ]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: syndesis-operator:install
  labels:
    app: syndesis
    syndesis.io/app: syndesis
    syndesis.io/type: operator
    syndesis.io/component: syndesis-operator
subjects:
- kind: ServiceAccount
  name: syndesis-operator
roleRef:
  kind: Role
  name: syndesis-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: authorization.openshift.io/v1
kind: RoleBinding
metadata:
  name: syndesis-operator:view
  labels:
    app: syndesis
    syndesis.io/app: syndesis
    syndesis.io/type: operator
    syndesis.io/component: syndesis-operator
subjects:
- kind: ServiceAccount
  name: syndesis-operator
roleRef:
  name: view
---
apiVersion: authorization.openshift.io/v1
kind: RoleBinding
metadata:
  name: syndesis-operator:edit
  labels:
    app: syndesis
    syndesis.io/app: syndesis
    syndesis.io/type: operator
    syndesis.io/component: syndesis-operator
subjects:
- kind: ServiceAccount
  name: syndesis-operator
roleRef:
  name: edit
---
apiVersion: authorization.openshift.io/v1
kind: ClusterRoleBinding
metadata:
  name: syndesis-operator:oauth:$NAMESPACE$
  labels:
    app: syndesis
    syndesis.io/app: syndesis
    syndesis.io/type: operator
    syndesis.io/component: syndesis-operator
subjects:
- kind: ServiceAccount
  name: syndesis-operator
  namespace: ${NAMESPACE}
roleRef:
  kind: ClusterRole
  name: syndesis-operator:$NAMESPACE$
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: syndesis
    syndesis.io/app: syndesis
    syndesis.io/type: operator
    syndesis.io/component: syndesis-operator
  name: fuse-online-operator
spec:
  lookupPolicy:
    local: false
  tags:
  - from:
      kind: DockerImage
      # Keep tag 'latest' here, its used as an anchor in the release script
      name: $OPERATOR$
    importPolicy:
      scheduled: true
    # Keep 'latest' here (including single quotes), its used as a pattern anchor in the release script
    name: "$TAG$"
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: syndesis-operator
  labels:
    app: syndesis
    syndesis.io/app: syndesis
    syndesis.io/type: operator
    syndesis.io/component: syndesis-operator
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
      syndesis.io/app: syndesis
      syndesis.io/type: operator
      syndesis.io/component: syndesis-operator
  template:
    metadata:
      labels:
        syndesis.io/app: syndesis
        syndesis.io/type: operator
        syndesis.io/component: syndesis-operator
    spec:
      serviceAccountName: syndesis-operator
      containers:
        - name: syndesis-operator
          image: ' '
          imagePullPolicy: IfNotPresent
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - syndesis-operator
      from:
        kind: ImageStreamTag
        # Keep tag 'latest' here, its used as an anchor in the release script
        name: fuse-online-operator:$TAG$
    type: ImageChange
  - type: ConfigChange
